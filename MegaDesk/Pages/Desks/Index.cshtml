@page
@model MegaDesk.IndexModel

@{
    ViewData["Title"] = "Saved Quotes";
}

<h1>All Quotes</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].FirstName)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Order[0].LastName)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Width)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Depth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].Drawers)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].SurfaceMaterial)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].RushOrder)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Order[0].QuoteTotal)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Order[0].DateAdded)
                </a>
            </th>
            <th>Quote Options</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Order)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Width)"
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Depth)"
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Drawers)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SurfaceMaterial)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RushOrder) days
                </td>
                <td>
                    $@Html.DisplayFor(modelItem => item.QuoteTotal)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateAdded)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.Order.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Order.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Order.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Order.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>
